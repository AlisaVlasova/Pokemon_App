{"version":3,"sources":["api/api.js","mobX/pokemonsContext.js","components/PokemonCard/PokemonCard.js","components/PokemonsList/PokemonsList.js","components/Details/Details.js","components/FindPokemons/FindPokemons.js","App.js","index.js"],"names":["API","getPokemons","name","limit","offset","fetch","then","response","json","PokemonsProvider","children","store","useLocalStore","pokemons","pokemon","isLoading","isLoadingDetails","error","query","types","pokemonsList","results","map","id","url","match","sprite","console","log","findPokemon","abilities","sprites","forms","species","base_experience","weight","height","stats","moves","location_area_encounters","game_indices","abilitiesNames","ab","ability","typesNames","t","type","movesNames","m","move","g","gameIndex","game_index","version","statsList","s","stat","base_stat","effort","front_default","baseExperience","location","gameIndices","setQuery","input","pokemonsContext","Provider","value","createContext","PokemonCard","useObserver","className","src","alt","PokemonsList","pokemonsStore","useContext","useEffect","role","onClick","key","defaultProps","Details","FindPokemons","handleSubmit","event","preventDefault","onSubmit","onChange","target","placeholder","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.29b838a7.chunk.js","sourcesContent":["const API = 'https://pokeapi.co/api/v2/';\nconst POKEMON_LIST = 'https://pokeapi.co/api/v2/pokemon/';\n\nexport const getPokemons = (name = '', limit, offset) => (\n  fetch(`${API}pokemon/${name}?limit=${limit}&offset=${offset}\"`)\n    .then(response => response.json())\n);\n\nexport const getPokemonById = (url) => (\n  fetch(`${url}`)\n    .then(response => response.json())\n);\n","import React, { createContext } from \"react\";\n\nimport { useLocalStore } from \"mobx-react-lite\";\nimport { getPokemons, getPokemonByUrl } from '../api/api';\n\nexport const PokemonsProvider = ({ children }) => {\n  const store = useLocalStore(() => ({\n    /* observables */\n    pokemons: [],\n    pokemon: {},\n    isLoading: false,\n    isLoadingDetails: false,\n    error: '',\n    query: '',\n    types: 'any',\n\n    /* actions */\n\n    async getPokemons() {\n      store.isLoading = true;\n      try {\n        const pokemonsList = (await getPokemons()).results;\n\n        store.pokemons = pokemonsList.map((pokemon) => {\n          const id = pokemon.url.match(/pokemon\\/(\\d+)\\//)[1];\n          const { name } = pokemon;\n          const sprite = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${id}.png`;\n          console.log(store.pokemons)\n\n          return {\n            ...pokemon,\n            name,\n            id,\n            sprite,\n          };\n        });\n      } catch (e) {\n        // store.setError(e);\n      }\n\n      store.isLoading = false;\n    },\n\n    async findPokemon(query) {\n      const {\n        abilities,\n        sprites,\n        forms,\n        species,\n        name,\n        id,\n        base_experience,\n        types,\n        weight,\n        height,\n        stats,\n        moves,\n        location_area_encounters,\n        game_indices,\n      } = await getPokemons(query);\n      const abilitiesNames = abilities.map(ab => ab.ability.name);\n      const typesNames = types.map(t => t.type.name);\n      const movesNames = moves.map(m => m.move.name);\n      const gameIndices = game_indices.map(g => ({\n        gameIndex: g.game_index,\n        version: g.version.name,\n      }));\n      const statsList = stats.map(s => ({\n        stat: s.stat.name,\n        base_stat: s.base_stat,\n        effort: s.effort,\n      }));\n      console.log(await getPokemons(query));\n      console.log(base_experience);\n      store.pokemon = {\n        ...store.pokemon,\n        abilities: abilitiesNames,\n        sprite: sprites.front_default,\n        name,\n        id,\n        baseExperience: base_experience,\n        types: typesNames,\n        weight,\n        height,\n        stats: statsList,\n        moves: movesNames,\n        location: location_area_encounters,\n        gameIndices: game_indices,\n      };\n      console.log(store.pokemon.abilities)\n    },\n\n    setQuery(input) {\n      store.query = input;\n    },\n  }));\n\n  return (\n    <pokemonsContext.Provider value={store}>{children}</pokemonsContext.Provider>\n  );\n};\n\nexport const pokemonsContext = createContext();\n","import React, { useContext, useEffect } from 'react';\nimport { useObserver } from 'mobx-react-lite';\nimport PropTypes from 'prop-types';\n\nimport './PokemonCard.scss';\n\nimport { pokemonsContext } from '../../mobX/pokemonsContext';\n\nexport const PokemonCard = ({\n  sprite,\n  name,\n  id,\n  types,\n}) => {\n\n  return useObserver(() => (\n    <div className=\"card\">\n      <div className=\"card__image-container\">\n        <figure className=\"card__image\">\n          <img\n            src={sprite}\n            alt=\"Pokemon\"\n          />\n        </figure>\n      </div>\n      <div className=\"card__content\">\n        <h2 className=\"card__title\">{name}</h2>\n      </div>\n    </div>\n  ));\n};\n\nPokemonCard.propTypes = {\n\n};\n","import React, { useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useObserver } from 'mobx-react-lite';\n\nimport './PokemonsList.scss';\nimport { pokemonsContext } from '../../mobX/pokemonsContext';\n\nimport { PokemonCard } from '../PokemonCard';\n\nexport const PokemonsList = () => {\n  const pokemonsStore = useContext(pokemonsContext);\n\n  useEffect(() => {\n    pokemonsStore.getPokemons();\n  }, []);\n\n  const handleClick = (name) => {\n    pokemonsStore.findPokemon(name);\n  };\n\n  return useObserver(() => (\n    <ul className=\"pokemons-list\">\n      {pokemonsStore.isLoading ? null\n        : pokemonsStore.pokemons.map(pokemon => (\n          <div\n            role=\"presentation\"\n            onClick={() => handleClick(pokemon.name)}\n          >\n            <li className=\"pokemons-list__item\" key={pokemon.name}>\n              <PokemonCard {...pokemon} />\n            </li>\n          </div>\n          \n        ))}\n    </ul>\n  ));\n};\n\nPokemonsList.propTypes = {\n\n};\n\nPokemonsList.defaultProps = {\n\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Details.scss';\n\nexport const Details = (\n  {\n    abilities,\n    sprite,\n    name,\n    id,\n    baseExperience,\n    types,\n    weight,\n    height,\n    stats,\n    moves,\n    location,\n    gameIndices,\n  },\n) => (!abilities || (\n  <div className=\"details\">\n    <div className=\"details__image-container\">\n      <img\n        className=\"details__image\"\n        src={sprite}\n        alt=\"Pokemon\"\n      />\n    </div>\n    <div className=\"details__content\">\n      <p className=\"details__title\">{name}</p>\n      <div className=\"content\">\n        <p>\n          <strong>ID: </strong>\n          {id}\n        </p>\n        <p>\n          <strong>Height: </strong>\n          {height}\n        </p>\n        <p>\n          <strong>Weight: </strong>\n          {weight}\n        </p>\n        <p>\n          <strong>Base Experience: </strong>\n          {baseExperience}\n        </p>\n      </div>\n    </div>\n  </div>\n)\n);\n\n// Preview.propTypes = {\n//   Title: PropTypes.string.isRequired,\n//   Poster: PropTypes.string,\n//   Actors: PropTypes.string,\n//   Awards: PropTypes.string,\n//   Country: PropTypes.string,\n//   Director: PropTypes.string,\n//   Genre: PropTypes.string,\n//   Language: PropTypes.string,\n//   Plot: PropTypes.string,\n//   Production: PropTypes.string,\n//   Released: PropTypes.string,\n//   Runtime: PropTypes.string,\n//   Writer: PropTypes.string,\n//   imdbRating: PropTypes.string,\n//   imdbVotes: PropTypes.string,\n// };\n\n// Preview.defaultProps = {\n//   Poster: '',\n//   Actors: '',\n//   Awards: '',\n//   Country: '',\n//   Director: '',\n//   Genre: '',\n//   Language: '',\n//   Plot: '',\n//   Production: '',\n//   Released: '',\n//   Runtime: '',\n//   Writer: '',\n//   imdbRating: '',\n//   imdbVotes: '',\n// };\n","import React, { useEffect, useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { useObserver } from 'mobx-react-lite';\n\nimport './FindPokemons.scss';\n\nimport { pokemonsContext } from '../../mobX/pokemonsContext';\nimport { Details } from '../Details';\n\nexport const FindPokemons = () => {\n  const pokemonsStore = useContext(pokemonsContext);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    pokemonsStore.findPokemon(pokemonsStore.query);\n  };\n\n  return useObserver(() => (\n    <div className=\"pokemons__finder finder\">\n      <form\n        className=\"finder__form\"\n        onSubmit={handleSubmit}\n      >\n        <input\n          className=\"finder__field\"\n          type=\"text\"\n          value={pokemonsStore.query}\n          onChange={event => pokemonsStore.setQuery(event.target.value)}\n          placeholder=\"Enter pokemon's name\"\n        />\n      </form>\n      {pokemonsStore.pokemon && (\n        <Details {...pokemonsStore.pokemon} />\n      )}\n    </div>\n  ));\n};\n\nFindPokemons.propTypes = {\n\n};\n","import React, { useState, useEffect, useContext } from 'react';\nimport { useObserver } from \"mobx-react-lite\";\n\nimport './App.scss';\n\nimport { pokemonsContext, PokemonsProvider } from './mobX/pokemonsContext';\nimport { PokemonsList } from './components/PokemonsList';\nimport { FindPokemons } from './components/FindPokemons';\n// import { Pagination } from './components/Pagination';\n\nexport const App = () => {\n\n\n  return (\n    <div className=\"pokemons\">\n      <PokemonsProvider>\n        <FindPokemons />\n        <PokemonsList />\n      </PokemonsProvider>\n      {/* <Pagination /> */}\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n// import 'bulma/css/bulma.css';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}