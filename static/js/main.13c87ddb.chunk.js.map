{"version":3,"sources":["images/192-1924986_emily-hojnowski-5-likes-pokeball-svg-clipart.png","api/api.js","mobX/pokemonsContext.js","components/PokemonCard/PokemonCard.js","components/Pagination/Pagination.js","components/PokemonsList/PokemonsList.js","colors.js","components/Details/Details.js","components/FindPokemons/FindPokemons.js","App.js","index.js"],"names":["module","exports","API","getPokemons","name","limit","offset","fetch","then","response","json","getPokemonBytype","type","PokemonsProvider","children","store","useLocalStore","pokemons","clonedPokemons","pokemon","isLoading","isLoadingDetails","error","query","types","typeId","pageSize","currentPage","setPagination","page","setPageSize","num","pokemonsList","results","map","id","url","match","sprite","notFound","filterPokemons","some","includes","filteredPokemonsList","filter","getTypes","typesList","slice","filterPokemonsByType","pokemonsByType","findPokemon","abilities","sprites","forms","species","base_experience","weight","height","stats","moves","location_area_encounters","game_indices","abilitiesNames","ab","ability","typesNames","t","movesNames","m","move","gameIndices","g","gameIndex","game_index","version","statsList","s","stat","base_stat","effort","front_default","baseExperience","location","clearPokemon","setQuery","input","setTypeId","cancelError","pokemonsContext","Provider","value","createContext","PokemonCard","useObserver","className","src","alt","Pagination","pokemonsStore","useContext","totalPages","Math","ceil","length","handlePage","disabled","onClick","onChange","event","target","PokemonsList","useEffect","role","key","getColor","normal","poison","fire","water","electric","fighting","ground","psychic","dark","rock","steel","grass","ice","flying","bug","ghost","dragon","fairy","Details","htmlFor","style","color","FindPokemons","handleSubmit","preventDefault","handleChange","trim","onSubmit","placeholder","App","ReactDOM","render","document","getElementById"],"mappings":"uJAAAA,EAAOC,QAAU,IAA0B,sF,sNCArCC,EAAM,6BAGCC,EAAc,eAACC,EAAD,uDAAQ,GAAIC,EAAZ,uDAAoB,KAAMC,EAA1B,uDAAmC,EAAnC,OACzBC,MAAM,GAAD,OAAIL,EAAJ,mBAAkBE,EAAlB,kBAAgCC,EAAhC,mBAAgDC,EAAhD,MACFE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WAGlBC,EAAmB,eAACC,EAAD,uDAAQ,GAAR,OAC9BL,MAAM,GAAD,OAAIL,EAAJ,gBAAeU,IACjBJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WCJlBG,G,MAAmB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC3BC,EAAQC,aAAc,iBAAO,CACjCC,SAAU,GACVC,eAAgB,GAChBC,QAAS,GACTC,WAAW,EACXC,kBAAkB,EAClBC,OAAO,EACPC,MAAO,GACPC,MAAO,GACPC,OAAQ,EACRnB,OAAQ,EACRD,MAAO,GACPqB,SAAU,GACVC,YAAa,EAEbC,cAfiC,SAenBtB,EAAQD,EAAOwB,GAC3Bd,EAAMT,OAASA,EACfS,EAAMV,MAAQA,EACdU,EAAMY,YAAcE,GAGtBC,YArBiC,SAqBrBC,GACVhB,EAAMW,SAAWK,EACjBhB,EAAMV,MAAQ0B,EACdhB,EAAMT,OAAS,GAGXH,YA3B2B,WA2BZ,OAAD,iHAClBY,EAAMK,WAAY,EADA,kBAGYjB,IAHZ,OAGV6B,EAHU,OAG2BC,QAE3ClB,EAAME,SAAWe,EAAaE,KAAI,SAACf,GACjC,IAAMgB,EAAKhB,EAAQiB,IAAIC,MAAM,oBAAoB,GACzCjC,EAASe,EAATf,KACFkC,EAAS,mFAA4EH,EAA5E,UACZI,EAEH,OAAO,2BACFpB,GADL,IAEEf,OACA+B,KACAG,cAIJvB,EAAMG,eAAN,YAA2BH,EAAME,UAnBjB,gDAqBhBF,EAAMO,OAAQ,EACdP,EAAMO,OAAQ,EAtBE,QAyBlBP,EAAMK,WAAY,EAzBA,4DA4BpBoB,eAvDiC,SAuDlBjB,GACRR,EAAME,SAASwB,MAAK,SAAAtB,GAAO,OAAIA,EAAQf,KAAKsC,SAASnB,QACxDR,EAAMO,OAAQ,GAGhB,IAAMqB,EAAuB5B,EAAME,SAChC2B,QAAO,SAAAzB,GAAO,OAAIA,EAAQf,KAAKsC,SAASnB,MAE3CR,EAAMG,eAAiByB,GAGnBE,SAlE2B,WAkEf,OAAD,0HACUlC,IADV,OACTmC,EADS,OAC8Bb,QAE7ClB,EAAMS,MAAQsB,EAAUC,MAAM,GAAI,GAAGb,KAAI,SAACtB,GAIxC,MAAO,CACLR,KAJeQ,EAATR,KAKN+B,GAJSvB,EAAKwB,IAAIC,MAAM,iBAAiB,OAL9B,8CAcXW,qBAhF2B,SAgFNpC,GAAO,OAAD,0HACDD,EAAiBC,GADhB,OACzBqC,EADyB,OACuB9B,QAEtDJ,EAAME,SAAWgC,EAAef,KAAI,SAACf,GACnC,IAAMgB,EAAKhB,EAAQA,QAAQiB,IAAIC,MAAM,oBAAoB,GACjDjC,EAASe,EAAQA,QAAjBf,KACFkC,EAAS,mFAA4EH,EAA5E,UACZI,EAEH,OAAO,2BACFpB,GADL,IAEEf,OACA+B,KACAG,cAGJvB,EAAMG,eAAN,YAA2BH,EAAME,UAhBF,8CAmB3BiC,YAnG2B,SAmGf3B,GAAQ,OAAD,mJACvBR,EAAMM,kBAAmB,EADF,kBAkBXlB,EAAYoB,GAlBD,gBAInB4B,EAJmB,EAInBA,UACAC,EALmB,EAKnBA,QALmB,EAMnBC,MANmB,EAOnBC,QACAlD,EARmB,EAQnBA,KACA+B,EATmB,EASnBA,GACAoB,EAVmB,EAUnBA,gBACA/B,EAXmB,EAWnBA,MACAgC,EAZmB,EAYnBA,OACAC,EAbmB,EAanBA,OACAC,EAdmB,EAcnBA,MACAC,EAfmB,EAenBA,MACAC,EAhBmB,EAgBnBA,yBACAC,EAjBmB,EAiBnBA,aAEIC,EAAiBX,EAAUjB,KAAI,SAAA6B,GAAE,OAAIA,EAAGC,QAAQ5D,QAChD6D,EAAazC,EAAMU,KAAI,SAAAgC,GAAC,OAAIA,EAAEtD,KAAKR,QACnC+D,EAAaR,EAAMzB,KAAI,SAAAkC,GAAC,OAAIA,EAAEC,KAAKjE,QACnCkE,EAAcT,EAAa3B,KAAI,SAAAqC,GAAC,MAAK,CACzCC,UAAWD,EAAEE,WACbC,QAASH,EAAEG,QAAQtE,SAEfuE,EAAYjB,EAAMxB,KAAI,SAAA0C,GAAC,MAAK,CAChCC,KAAMD,EAAEC,KAAKzE,KACb0E,UAAWF,EAAEE,UACbC,OAAQH,EAAEG,WAGZhE,EAAMI,QAAN,2BACKJ,EAAMI,SADX,IAEEgC,UAAWW,EACXxB,OAAQc,EAAQ4B,cAChB5E,OACA+B,KACA8C,eAAgB1B,EAChB/B,MAAOyC,EACPT,SACAC,SACAC,MAAOiB,EACPhB,MAAOQ,EACPe,SAAUtB,EACVU,gBA7CmB,kDAgDrBvD,EAAMO,OAAQ,EAhDO,QAmDvBP,EAAMM,kBAAmB,EAnDF,6DAsDzB8D,aAzJiC,WA0J/BpE,EAAMI,QAAU,IAGlBiE,SA7JiC,SA6JxBC,GACPtE,EAAMQ,MAAQ8D,GAGhBC,UAjKiC,SAiKvBD,GACRtE,EAAMU,OAAS4D,GAGjBE,YArKiC,WAsK/BxE,EAAMO,OAAQ,OAKlB,OACE,kBAACkE,EAAgBC,SAAjB,CACEC,MAAO3E,GAEND,KAKM0E,EAAkBG,0BCrLlBC,G,YAAc,SAAC,GAAD,IACzBtD,EADyB,EACzBA,OACAlC,EAFyB,EAEzBA,KAFyB,OAIzByF,aAAY,kBACV,yBAAKC,UAAU,QACb,yBAAKA,UAAU,yBACb,yBACEA,UAAU,cACVC,IAAKzD,EACL0D,IAAI,aAGR,wBAAIF,UAAU,eACX1F,SCbI6F,G,MAAa,WACxB,IAAMC,EAAgBC,qBAAWX,GAC3BY,EAAaC,KAAKC,KAAKJ,EAAcjF,SAASsF,OAASL,EAAcxE,UAErE8E,EAAa,SAAClG,EAAQD,EAAOwB,GACjCqE,EAActE,cAActB,EAAQD,EAAOwB,IAG7C,OACE,yBAAKiE,UAAU,cACb,yBAAKA,UAAU,iCACb,4BACEA,UAAU,qBACVlF,KAAK,SACL6F,SAAwC,IAA9BP,EAAcvE,YACxB+E,QAAS,WACPF,EACGN,EAAc5F,OAAS4F,EAAcxE,SACrCwE,EAAc7F,MAAQ6F,EAAcxE,SACpCwE,EAAcvE,YAAc,KARnC,KAcA,uBAAGmE,UAAU,qBAAb,UACMI,EAAcvE,YADpB,cACqCyE,IAErC,4BACEN,UAAU,qBACVlF,KAAK,SACL6F,SAAUP,EAAcvE,cAAgByE,GACnCF,EAAcjF,SAASsF,QAAUL,EAAcxE,SACpDgF,QAAS,WACPF,EACGN,EAAc5F,OAAS4F,EAAcxE,SACrCwE,EAAc7F,MAAQ6F,EAAcxE,SACpCwE,EAAcvE,YAAc,KATnC,MAgBF,yBAAKmE,UAAU,qCACb,uBAAGA,UAAU,qBAAb,cAGA,4BACEA,UAAU,0BACVa,SAAU,SAAAC,GAAK,OAAIV,EAAcpE,YAAY8E,EAAMC,OAAOnB,SAE1D,4BACEI,UAAU,wBACVJ,MAAO,IAFT,MAMA,4BACEI,UAAU,wBACVJ,MAAO,IAFT,MAMA,4BACEI,UAAU,wBACVJ,MAAO,IAFT,WC9DGoB,EAAe,WAC1B,IAAMZ,EAAgBC,qBAAWX,GAEjCuB,qBAAU,WACRb,EAAc/F,gBACb,IAMH,OAAO0F,aAAY,kBACjB,yBAAKC,UAAU,sBACb,wBAAIA,UAAU,iBACXI,EAAc9E,UAEX,uBAAG0E,UAAU,eAAb,cAGEI,EAAchF,eACf6B,MAAMmD,EAAc5F,OAAQ4F,EAAc7F,OAC1C6B,KAAI,SAAAf,GAAO,OACV,yBACE6F,KAAK,eACLN,QAAS,kBAjBFtG,EAiBoBe,EAAQf,UAhB/C8F,EAAchD,YAAY9C,GADR,IAACA,IAmBP,wBAAI0F,UAAU,sBAAsBmB,IAAK9F,EAAQf,MAC/C,kBAAC,EAAgBe,SAK7B,kBAAC,EAAD,WCzCO+F,G,YAAW,SAACtG,GAsBvB,MArBc,CACZuG,OAAQ,UACRC,OAAQ,UACRC,KAAM,UACNC,MAAO,UACPC,SAAU,UACVC,SAAU,UACVC,OAAQ,UACRC,QAAS,UACTC,KAAM,UACNC,KAAM,UACNC,MAAO,UACPC,MAAO,UACPC,IAAK,UACLC,OAAQ,UACRC,IAAK,UACLC,MAAO,UACPC,OAAQ,UACRC,MAAO,WAGIxH,IAAS,YCdXyH,EAAU,SAAC,GAWlB,IATF/F,EASC,EATDA,OACAlC,EAQC,EARDA,KAEA6E,GAMC,EAPD9C,GAOC,EAND8C,gBACAzD,EAKC,EALDA,MACAgC,EAIC,EAJDA,OACAC,EAGC,EAHDA,OACAC,EAEC,EAFDA,MAGIwC,EAAgBC,qBAAWX,GAEjC,OAAOK,aAAY,WACjB,OAAOK,EAAc7E,iBAEjB,uBAAGyE,UAAU,UAAb,eAGG1F,GACH,yBAAK0F,UAAU,WACb,2BACElF,KAAK,WACLkF,UAAU,UACV3D,GAAG,SACHwE,SAAU,kBAAMT,EAAcf,kBAEhC,2BACEW,UAAU,wBACVwC,QAAQ,UAFV,QAMA,yBAAKxC,UAAU,oBACb,yBACEA,UAAU,iBACVC,IAAKzD,EACL0D,IAAI,YAEN,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,kBACV1F,GAEH,wBAAI0F,UAAU,uBACXtE,EAAMU,KAAI,SAAAtB,GAAI,OACb,wBACEqG,IAAKrG,EACLkF,UAAU,gBACVyC,MAAO,CACLC,MAAOtB,EAAStG,KAGjBA,SAMX,yBAAKkF,UAAU,wBACb,uBAAGA,UAAU,sBACX,0BAAMA,UAAU,aAAhB,WADF,WAIOrC,IAEP,uBAAGqC,UAAU,sBACX,0BAAMA,UAAU,aAAhB,WADF,WAIOtC,IAEP,uBAAGsC,UAAU,sBACX,0BAAMA,UAAU,aAAhB,oBADF,WAIOb,IAEP,2BAAOa,UAAU,wBACf,+BACE,wBAAIA,UAAU,uBACZ,wBAAIA,UAAU,yBAAd,QAGA,wBAAIA,UAAU,yBAAd,QAGA,wBAAIA,UAAU,yBAAd,YAKJ,+BACGpC,EAAMxB,KAAI,SAAA2C,GAAI,OACb,wBAAIoC,IAAKpC,EAAKA,KAAMiB,UAAU,kBAC5B,wBAAIA,UAAU,sBACXjB,EAAKA,MAER,wBAAIiB,UAAU,iBACXjB,EAAKC,WAER,wBAAIgB,UAAU,iBACXjB,EAAKE,oBCrGf0D,EAAe,WAC1B,IAAMvC,EAAgBC,qBAAWX,GAEjCuB,qBAAU,WACRb,EAAcrD,aACb,IAEH,IAAM6F,EAAe,SAAC9B,GACpBA,EAAM+B,iBACNzC,EAAchD,YAAYgD,EAAc3E,OACxC2E,EAAcd,SAAS,KAGnBwD,EAAe,SAAChC,GACpBV,EAAcX,cACdW,EAAcd,SAASwB,EAAMC,OAAOnB,MAAMmD,QAC1C3C,EAAc1D,eAAe0D,EAAc3E,QAS7C,OAAOsE,aAAY,kBACjB,yBAAKC,UAAU,UACb,0BACEA,UAAU,eACVgD,SAAUJ,GAEV,yBAAK5C,UAAU,kBACb,2BACEA,UAAWI,EAAc5E,MACrB,sBACA,gBAEJV,KAAK,OACL8E,MAAOQ,EAAc3E,MACrBoF,SAAUiC,EACVG,YAAa7C,EAAc5E,MACvB,kBACA,mBAGN,4BACEV,KAAK,SACLkF,UAAU,kBAFZ,WAQF,wBAAIA,UAAU,iBACZ,4BACE,2BACEA,UAAU,0BACVlF,KAAK,QACLR,KAAK,OACL+B,GAAG,IACHwE,SAAU,kBAAMT,EAAc/F,iBAEhC,2BAAOmI,QAAQ,IAAIxC,UAAU,gBAA7B,QAIDI,EAAc1E,MAAMU,KAAI,SAAAtB,GAAI,OAC3B,wBACEqG,IAAKrG,EAAKuB,IAEV,2BACE2D,UAAU,0BACVlF,KAAK,QACLR,KAAK,OACL+B,GAAIvB,EAAKuB,GACTuD,MAAOQ,EAAczE,OACrBkF,SAAU,kBAzDElF,EAyDqBb,EAAKuB,GAxDlD+D,EAAcd,SAAS,IACvBc,EAAcZ,UAAU7D,QACxByE,EAAclD,qBAAqBkD,EAAczE,QAH1B,IAACA,KA2Dd,2BACE6G,QAAS1H,EAAKuB,GACd2D,UAAU,eACVyC,MAAO,CACLC,MAAOtB,EAAStG,EAAKR,QAGtBQ,EAAKR,YAMf8F,EAAc5E,MACb,uBAAGwE,UAAU,iBAAb,6BAGEI,EAAc/E,SAChB,kBAAC,EAAY+E,EAAc/E,cChGtB6H,EAAM,kBACjBnD,aAAY,kBACV,yBAAKC,UAAU,YACb,kBAAC,EAAD,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,YCTRmD,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.13c87ddb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/192-1924986_emily-hojnowski-5-likes-pokeball-svg-clipart.b452792e.png\";","const API = 'https://pokeapi.co/api/v2/';\nconst POKEMON_LIST = 'https://pokeapi.co/api/v2/pokemon/';\n\nexport const getPokemons = (name = '', limit = 1050, offset = 0) => (\n  fetch(`${API}pokemon/${name}?limit=${limit}&offset=${offset}\"`)\n    .then(response => response.json())\n);\n\nexport const getPokemonBytype = (type = '') => (\n  fetch(`${API}type/${type}`)\n    .then(response => response.json())\n);\n","import React, { createContext } from 'react';\n\nimport { useLocalStore } from 'mobx-react-lite';\nimport { getPokemons, getPokemonBytype } from '../api/api';\nimport notFound from '../images/192-1924986_emily-hojnowski-5-likes-pokeball-svg-clipart.png';\n\nexport const PokemonsProvider = ({ children }) => {\n  const store = useLocalStore(() => ({\n    pokemons: [],\n    clonedPokemons: [],\n    pokemon: {},\n    isLoading: false,\n    isLoadingDetails: false,\n    error: false,\n    query: '',\n    types: [],\n    typeId: 0,\n    offset: 0,\n    limit: 10,\n    pageSize: 10,\n    currentPage: 1,\n\n    setPagination(offset, limit, page) {\n      store.offset = offset;\n      store.limit = limit;\n      store.currentPage = page;\n    },\n\n    setPageSize(num) {\n      store.pageSize = num;\n      store.limit = num;\n      store.offset = 0;\n    },\n\n    async getPokemons() {\n      store.isLoading = true;\n      try {\n        const pokemonsList = (await getPokemons()).results;\n\n        store.pokemons = pokemonsList.map((pokemon) => {\n          const id = pokemon.url.match(/pokemon\\/(\\d+)\\//)[1];\n          const { name } = pokemon;\n          const sprite = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${id}.png`\n          || notFound;\n\n          return {\n            ...pokemon,\n            name,\n            id,\n            sprite,\n          };\n        });\n\n        store.clonedPokemons = [...store.pokemons];\n      } catch {\n        store.error = true;\n        store.error = false;\n      }\n\n      store.isLoading = false;\n    },\n\n    filterPokemons(query) {\n      if (!store.pokemons.some(pokemon => pokemon.name.includes(query))) {\n        store.error = true;\n      }\n\n      const filteredPokemonsList = store.pokemons\n        .filter(pokemon => pokemon.name.includes(query));\n\n      store.clonedPokemons = filteredPokemonsList;\n    },\n\n    async getTypes() {\n      const typesList = (await getPokemonBytype()).results;\n\n      store.types = typesList.slice(0, -2).map((type) => {\n        const { name } = type;\n        const id = type.url.match(/type\\/(\\d+)\\//)[1];\n\n        return {\n          name,\n          id,\n        };\n      });\n    },\n\n    async filterPokemonsByType(type) {\n      const pokemonsByType = (await getPokemonBytype(type)).pokemon;\n\n      store.pokemons = pokemonsByType.map((pokemon) => {\n        const id = pokemon.pokemon.url.match(/pokemon\\/(\\d+)\\//)[1];\n        const { name } = pokemon.pokemon;\n        const sprite = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${id}.png`\n        || notFound;\n\n        return {\n          ...pokemon,\n          name,\n          id,\n          sprite,\n        };\n      });\n      store.clonedPokemons = [...store.pokemons];\n    },\n\n    async findPokemon(query) {\n      store.isLoadingDetails = true;\n      try {\n        const {\n          abilities,\n          sprites,\n          forms,\n          species,\n          name,\n          id,\n          base_experience,\n          types,\n          weight,\n          height,\n          stats,\n          moves,\n          location_area_encounters,\n          game_indices,\n        } = await getPokemons(query);\n        const abilitiesNames = abilities.map(ab => ab.ability.name);\n        const typesNames = types.map(t => t.type.name);\n        const movesNames = moves.map(m => m.move.name);\n        const gameIndices = game_indices.map(g => ({\n          gameIndex: g.game_index,\n          version: g.version.name,\n        }));\n        const statsList = stats.map(s => ({\n          stat: s.stat.name,\n          base_stat: s.base_stat,\n          effort: s.effort,\n        }));\n\n        store.pokemon = {\n          ...store.pokemon,\n          abilities: abilitiesNames,\n          sprite: sprites.front_default,\n          name,\n          id,\n          baseExperience: base_experience,\n          types: typesNames,\n          weight,\n          height,\n          stats: statsList,\n          moves: movesNames,\n          location: location_area_encounters,\n          gameIndices,\n        };\n      } catch {\n        store.error = true;\n      }\n\n      store.isLoadingDetails = false;\n    },\n\n    clearPokemon() {\n      store.pokemon = {};\n    },\n\n    setQuery(input) {\n      store.query = input;\n    },\n\n    setTypeId(input) {\n      store.typeId = input;\n    },\n\n    cancelError() {\n      store.error = false;\n    },\n\n  }));\n\n  return (\n    <pokemonsContext.Provider\n      value={store}\n    >\n      {children}\n    </pokemonsContext.Provider>\n  );\n};\n\nexport const pokemonsContext = createContext();\n","import React from 'react';\nimport { useObserver } from 'mobx-react-lite';\nimport PropTypes from 'prop-types';\n\nimport './PokemonCard.scss';\n\nexport const PokemonCard = ({\n  sprite,\n  name,\n}) => (\n  useObserver(() => (\n    <div className=\"card\">\n      <div className=\"card__image-container\">\n        <img\n          className=\"card__image\"\n          src={sprite}\n          alt=\"Pokemon\"\n        />\n      </div>\n      <h2 className=\"card__title\">\n        {name}\n      </h2>\n    </div>\n  ))\n);\n\nPokemonCard.propTypes = {\n  pokemon: PropTypes.shape({\n    sprite: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import React, { useContext } from 'react';\nimport { useObserver } from 'mobx-react-lite';\n\nimport './Pagination.scss';\n\nimport { pokemonsContext } from '../../mobX/pokemonsContext';\n\nexport const Pagination = () => {\n  const pokemonsStore = useContext(pokemonsContext);\n  const totalPages = Math.ceil(pokemonsStore.pokemons.length / pokemonsStore.pageSize);\n\n  const handlePage = (offset, limit, page) => {\n    pokemonsStore.setPagination(offset, limit, page);\n  };\n\n  return (\n    <div className=\"pagination\">\n      <div className=\"pagination__buttons-container\">\n        <button\n          className=\"pagination__button\"\n          type=\"button\"\n          disabled={pokemonsStore.currentPage === 1}\n          onClick={() => {\n            handlePage(\n              (pokemonsStore.offset - pokemonsStore.pageSize),\n              (pokemonsStore.limit - pokemonsStore.pageSize),\n              (pokemonsStore.currentPage - 1),\n            );\n          }}\n        >\n          {`<`}\n        </button>\n        <p className=\"pagination__title\">\n          {`${pokemonsStore.currentPage} / ${totalPages}`}\n        </p>\n        <button\n          className=\"pagination__button\"\n          type=\"button\"\n          disabled={pokemonsStore.currentPage === totalPages\n            || pokemonsStore.pokemons.length <= pokemonsStore.pageSize}\n          onClick={() => {\n            handlePage(\n              (pokemonsStore.offset + pokemonsStore.pageSize),\n              (pokemonsStore.limit + pokemonsStore.pageSize),\n              (pokemonsStore.currentPage + 1),\n            );\n          }}\n        >\n          {`>`}\n        </button>\n      </div>\n      <div className=\"pagination__page-select-container\">\n        <p className=\"pagination__title\">\n          Page size:\n        </p>\n        <select\n          className=\"pagination__page-select\"\n          onChange={event => pokemonsStore.setPageSize(event.target.value)}\n        >\n          <option\n            className=\"pagination__page-size\"\n            value={10}\n          >\n            10\n          </option>\n          <option\n            className=\"pagination__page-size\"\n            value={20}\n          >\n            20\n          </option>\n          <option\n            className=\"pagination__page-size\"\n            value={50}\n          >\n            50\n          </option>\n        </select>\n      </div>\n    </div>\n  );\n};\n","import React, { useContext, useEffect } from 'react';\nimport { useObserver } from 'mobx-react-lite';\n\nimport './PokemonsList.scss';\n\nimport { pokemonsContext } from '../../mobX/pokemonsContext';\nimport { PokemonCard } from '../PokemonCard';\nimport { Pagination } from '../Pagination';\n\nexport const PokemonsList = () => {\n  const pokemonsStore = useContext(pokemonsContext);\n\n  useEffect(() => {\n    pokemonsStore.getPokemons();\n  }, []);\n\n  const handleClick = (name) => {\n    pokemonsStore.findPokemon(name);\n  };\n\n  return useObserver(() => (\n    <div className=\"pokemons-container\">\n      <ul className=\"pokemons-list\">\n        {pokemonsStore.isLoading\n          ? (\n            <p className=\"list-loader\">\n              Loading...\n            </p>\n          ) : pokemonsStore.clonedPokemons\n            .slice(pokemonsStore.offset, pokemonsStore.limit)\n            .map(pokemon => (\n              <div\n                role=\"presentation\"\n                onClick={() => handleClick(pokemon.name)}\n              >\n                <li className=\"pokemons-list__item\" key={pokemon.name}>\n                  <PokemonCard {...pokemon} />\n                </li>\n              </div>\n            ))}\n      </ul>\n      <Pagination />\n    </div>\n  ));\n};\n","export const getColor = (type) => {\n  const color = {\n    normal: '#A8A878',\n    poison: '#A040A0',\n    fire: '#9C531F',\n    water: '#6890F0',\n    electric: '#F8D030',\n    fighting: '#C03028',\n    ground: '#927D44',\n    psychic: '#F85888',\n    dark: '#705848',\n    rock: '#B8A038',\n    steel: '#B8B8D0',\n    grass: '#78C850',\n    ice: '#98D8D8',\n    flying: '#A890F0',\n    bug: '#A8B820',\n    ghost: '#705898',\n    dragon: '#7038F8',\n    fairy: '#EE99AC',\n  };\n\n  return color[type] || '#000000';\n};\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { useObserver } from 'mobx-react-lite';\n\nimport './Details.scss';\nimport { pokemonsContext } from '../../mobX/pokemonsContext';\nimport { getColor } from '../../colors';\n\nexport const Details = (\n  {\n    sprite,\n    name,\n    id,\n    baseExperience,\n    types,\n    weight,\n    height,\n    stats,\n  },\n) => {\n  const pokemonsStore = useContext(pokemonsContext);\n\n  return useObserver(() => {\n    return pokemonsStore.isLoadingDetails\n      ? (\n        <p className=\"loader\">\n          Loading...\n        </p>\n      ) : !name || (\n        <div className=\"details\">\n          <input\n            type=\"checkbox\"\n            className=\"toggler\"\n            id=\"closer\"\n            onChange={() => pokemonsStore.clearPokemon()}\n          />\n          <label\n            className=\"details__closer-label\"\n            htmlFor=\"closer\"\n          >\n            Hide\n          </label>\n          <div className=\"details__content\">\n            <img\n              className=\"details__image\"\n              src={sprite}\n              alt=\"Pokemon\"\n            />\n            <div className=\"details__main\">\n              <p className=\"details__title\">\n                {name}\n              </p>\n              <ul className=\"details__types-list\">\n                {types.map(type => (\n                  <li\n                    key={type}\n                    className=\"details__type\"\n                    style={{\n                      color: getColor(type),\n                    }}\n                  >\n                    {type}\n                  </li>\n                ))}\n              </ul>\n            </div>\n          </div>\n          <div className=\"details__description\">\n            <p className=\"details__base-info\">\n              <span className=\"highlited\">\n                Height:\n              </span>\n              {` ${height}`}\n            </p>\n            <p className=\"details__base-info\">\n              <span className=\"highlited\">\n                Weight:\n              </span>\n              {` ${weight}`}\n            </p>\n            <p className=\"details__base-info\">\n              <span className=\"highlited\">\n                Base Experience:\n              </span>\n              {` ${baseExperience}`}\n            </p>\n            <table className=\"details__stats-table\">\n              <thead>\n                <tr className=\"details__stats-head\">\n                  <th className=\"details__stats-header\">\n                    stat\n                  </th>\n                  <th className=\"details__stats-header\">\n                    base\n                  </th>\n                  <th className=\"details__stats-header\">\n                    effort\n                  </th>\n                </tr>\n              </thead>\n              <tbody>\n                {stats.map(stat => (\n                  <tr key={stat.stat} className=\"details__stats\">\n                    <td className=\"details__stat-name\">\n                      {stat.stat}\n                    </td>\n                    <td className=\"details__stat\">\n                      {stat.base_stat}\n                    </td>\n                    <td className=\"details__stat\">\n                      {stat.effort}\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      );\n  });\n};\n\nDetails.propTypes = {\n  pokemon: PropTypes.shape({\n    sprite: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n    baseExperience: PropTypes.string.isRequired,\n    types: PropTypes.arrayOf(PropTypes.object).isRequired,\n    weight: PropTypes.string.isRequired,\n    height: PropTypes.string.isRequired,\n    stats: PropTypes.arrayOf(PropTypes.object).isRequired,\n  }).isRequired,\n};\n","import React, { useEffect, useContext } from 'react';\nimport { useObserver } from 'mobx-react-lite';\n\nimport './FindPokemons.scss';\n\nimport { pokemonsContext } from '../../mobX/pokemonsContext';\nimport { Details } from '../Details';\nimport { getColor } from '../../colors';\n\nexport const FindPokemons = () => {\n  const pokemonsStore = useContext(pokemonsContext);\n\n  useEffect(() => {\n    pokemonsStore.getTypes();\n  }, []);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    pokemonsStore.findPokemon(pokemonsStore.query);\n    pokemonsStore.setQuery('');\n  };\n\n  const handleChange = (event) => {\n    pokemonsStore.cancelError();\n    pokemonsStore.setQuery(event.target.value.trim());\n    pokemonsStore.filterPokemons(pokemonsStore.query);\n  };\n\n  const handleTypeChange = (typeId) => {\n    pokemonsStore.setQuery('');\n    pokemonsStore.setTypeId(typeId);\n    pokemonsStore.filterPokemonsByType(pokemonsStore.typeId);\n  };\n\n  return useObserver(() => (\n    <div className=\"finder\">\n      <form\n        className=\"finder__form\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"finder__search\">\n          <input\n            className={pokemonsStore.error\n              ? 'finder__error-field'\n              : 'finder__field'\n            }\n            type=\"text\"\n            value={pokemonsStore.query}\n            onChange={handleChange}\n            placeholder={pokemonsStore.error\n              ? 'No such pokemon'\n              : 'Search pokemon'\n            }\n          />\n          <button\n            type=\"submit\"\n            className=\"finder__button\"\n          >\n            Search\n          </button>\n        </div>\n\n        <ul className=\"finder__types\">\n          <li>\n            <input\n              className=\"finder__toggler toggler\"\n              type=\"radio\"\n              name=\"type\"\n              id=\"0\"\n              onChange={() => pokemonsStore.getPokemons()}\n            />\n            <label htmlFor=\"0\" className=\"finder__type\">\n              any\n            </label>\n          </li>\n          {pokemonsStore.types.map(type => (\n            <li\n              key={type.id}\n            >\n              <input\n                className=\"finder__toggler toggler\"\n                type=\"radio\"\n                name=\"type\"\n                id={type.id}\n                value={pokemonsStore.typeId}\n                onChange={() => handleTypeChange(type.id)}\n              />\n              <label\n                htmlFor={type.id}\n                className=\"finder__type\"\n                style={{\n                  color: getColor(type.name),\n                }}\n              >\n                {type.name}\n              </label>\n            </li>\n          ))}\n        </ul>\n      </form>\n      {pokemonsStore.error ? (\n        <p className=\"finder__error\">\n          No pokemon with such name\n        </p>\n      ) : pokemonsStore.pokemon && (\n        <Details {...pokemonsStore.pokemon} />\n      )}\n    </div>\n  ));\n};\n","import React from 'react';\nimport { useObserver } from 'mobx-react-lite';\n\nimport './App.scss';\n\nimport { PokemonsProvider } from './mobX/pokemonsContext';\nimport { PokemonsList } from './components/PokemonsList';\nimport { FindPokemons } from './components/FindPokemons';\n\nexport const App = () => (\n  useObserver(() => (\n    <div className=\"pokemons\">\n      <PokemonsProvider>\n        <FindPokemons />\n        <PokemonsList />\n      </PokemonsProvider>\n    </div>\n  ))\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}