{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/FindMovie/FindMovie.js","api.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","FindMovie","addMovie","useState","titleQuery","setTitleQuery","preview","setPreview","isMovieExists","setMovieExistance","findMovie","queryToLow","toLowerCase","movieFromData","find","fetch","then","response","json","Response","movieFromServer","Title","imdbID","Poster","Plot","onSubmit","event","preventDefault","htmlFor","type","id","placeholder","value","onChange","target","onClick","disabled","App","data","updateMovies","some","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.465f75aa.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport PropTypes from 'prop-types';\n\nimport { MovieCard } from '../MovieCard';\nimport { getMovie } from '../../api';\n\nexport const FindMovie = ({ movies, addMovie }) => {\n  const [titleQuery, setTitleQuery] = useState('');\n  const [preview, setPreview] = useState(movies[0]);\n  const [isMovieExists, setMovieExistance] = useState(true);\n\n  const findMovie = () => {\n    const queryToLow = titleQuery.toLowerCase();\n    const movieFromData = movies\n      .find(movie => movie.title.toLowerCase() === queryToLow);\n\n    if (movieFromData) {\n      setPreview(movieFromData);\n    } else {\n      getMovie(titleQuery)\n        .then((movie) => {\n          if (movie.Response === 'False') {\n            setMovieExistance(false);\n          } else {\n            const movieFromServer = {\n              title: movie.Title,\n              imdbId: movie.imdbID,\n              imgUrl: movie.Poster,\n              imdbUrl: `https://www.imdb.com/title/${movie.imdbID}`,\n              description: movie.Plot,\n            };\n\n            setPreview(movieFromServer);\n          }\n        });\n    }\n  };\n\n  const handleChanges = (event) => {\n    setTitleQuery(event.target.value);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setPreview(movies[0]);\n    setTitleQuery('');\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={isMovieExists ? 'input' : 'input is-danger'}\n              value={titleQuery}\n              onChange={handleChanges}\n            />\n          </div>\n\n          {isMovieExists || (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={() => findMovie()}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-primary\"\n              onClick={() => addMovie(preview)}\n              disabled={\n                !isMovieExists\n                || titleQuery === ''\n              }\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        <MovieCard {...preview} />\n      </div>\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.object).isRequired,\n  addMovie: PropTypes.func.isRequired,\n};\n","const OMDB_API = 'https://www.omdbapi.com/?apikey=65c1586c&t=';\n\nexport const getMovie = title => fetch(`${OMDB_API}${title}`)\n  .then(response => response.json());\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App = () => {\n  const [movies, updateMovies] = useState([...data]);\n\n  const addMovie = (preview) => {\n    const isAdded = movies.some(movie => movie.imdbId === preview.imdbId);\n\n    if (!isAdded) {\n      updateMovies([...movies, preview]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie\n          movies={movies}\n          addMovie={addMovie}\n        />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}